/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package minor;

import com.sun.glass.events.KeyEvent;
import java.sql.Connection;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.*;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import java.io.*;
import javax.swing.JFileChooser;
/**
 *
 * @author Bikash
 */
public class Table extends javax.swing.JFrame {
    
    

    String uname,date;
    public Table(String a,String b) {
        uname=a;
        date= b;
       
        initComponents();
        setResizable(false);
        setLocation(275,150);
        setSize(870,450);
        setTitle("MATERIAL EXPENSES TABLE");
        
        
       /* dsp.setVisible(false);
         dcon.setVisible(false);
         dadd.setVisible(false);
         dmp.setVisible(false);
         dcost.setVisible(false);
         dqty.setVisible(false);
         drate.setVisible(false);
          ddate.setVisible(false);*/
        
        
        
        Dbconnect db= new Dbconnect();
        db.connect();
        Connection con=db.con;
        try{
            Statement stmt;
            stmt= con.createStatement();
            
            String sql="select s_id ,s_name,contact,address,date,m_purchase,qty_unit,rate,cost from material where username='"+uname+"'";
            ResultSet rs = stmt.executeQuery(sql);
           
           table_data.setModel(DbUtils.resultSetToTableModel(rs));
            
            
            
            
        }
        catch(Exception e){
            System.out.println(e);
        
        }
        
        table_data.removeColumn(table_data.getColumnModel().getColumn(0));
        
       
}
    public void close(){
        WindowEvent winClosingEvent =new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table_data = new javax.swing.JTable();
        update = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        dsp = new javax.swing.JTextField();
        dadd = new javax.swing.JTextField();
        dcon = new javax.swing.JTextField();
        ddate = new javax.swing.JTextField();
        dmp = new javax.swing.JTextField();
        dqty = new javax.swing.JTextField();
        drate = new javax.swing.JTextField();
        dcost = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        table_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Supplier", "Contact", "Address", "Date", "Material", "Qty/Unite", "Rate", "Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_dataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_data);

        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("EXPORT TO EXCEL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("BACK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        dsp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dspKeyTyped(evt);
            }
        });

        dadd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                daddKeyTyped(evt);
            }
        });

        dcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dconActionPerformed(evt);
            }
        });
        dcon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dconKeyTyped(evt);
            }
        });

        ddate.setEditable(false);

        dqty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dqtyKeyTyped(evt);
            }
        });

        drate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                drateKeyTyped(evt);
            }
        });

        dcost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dcostKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(update)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dsp, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dcon, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(dadd, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ddate, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dmp, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dqty, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(drate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dcost, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ddate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dqty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(drate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(update)
                            .addComponent(jButton2)))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       Dbentry en = new Dbentry(uname);
       en.setVisible(true);
       close();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try{
            
           
            
            
           ExcelExporter exp = new ExcelExporter();
           
           String filename;
           
           filename = JOptionPane.showInputDialog("Enter the file name");
           if(filename==null){
               table_data.setVisible(true);
           //exp.exportTable(table_data,new File("C:/Users/Bikash/Documents/"+filename+".xls"));
           }
           else{
               exp.exportTable(table_data,new File("C:/Users/Bikash/Documents/"+filename+".xls"));
           }
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);  
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
       // Dbentry top = new Dbentry(uname);
       
        Dbconnect fb = new Dbconnect();
        fb.connect();
        Connection con = fb.con;
        
        try{
             Statement stmt;
            stmt= con.createStatement();
             
       
            
            String value1=dsp.getText();
            String value2=dcon.getText();
            String value3=dadd.getText();
            String value4=dmp.getText();
            String value5=dcost.getText();
            String value6=dqty.getText();
            String value7=drate.getText();
            
            int row=table_data.getSelectedRow();
            
            String Table_click=(table_data.getModel().getValueAt(row,0).toString());
            
            String sql="update material set s_name='"+value1+"',contact='"+value2+"',address='"+value3+"',m_purchase='"+value4+"',qty_unit='"+value6+"',rate='"+value7+"',cost='"+value5+"' where s_id='"+Table_click+"' ";
            stmt.executeUpdate(sql);
            
            JOptionPane.showMessageDialog(null, "updated"); 
            
           close();
           Table tb =new Table(uname,date);
           tb.setVisible(true);
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_updateActionPerformed

    private void table_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_dataMouseClicked
       // Dbentry top = new Dbentry(uname); 
        /*  dsp.setVisible(true);
         dcon.setVisible(true);
         dadd.setVisible(true);
         dmp.setVisible(true);
         dcost.setVisible(true);
         dqty.setVisible(true);
         drate.setVisible(true);
         ddate.setVisible(true);*/
        Dbconnect fb = new Dbconnect();
        fb.connect();
        Connection con = fb.con;
        
        try{
            
      
            
               Statement stmt;
            stmt= con.createStatement();
             int row=table_data.getSelectedRow();
             String Table_click=(table_data.getModel().getValueAt(row,0).toString());
             String sql="select s_name,contact,address,date,m_purchase,qty_unit,rate,cost from material where s_id='"+Table_click+"'";
             ResultSet rs;
             rs=stmt.executeQuery(sql);
             if(rs.next()){
                 String add1=rs.getString("s_name");
                 dsp.setText(add1);
                 
                  String add2=rs.getString("contact");
                 dcon.setText(add2);
                 
                  String add3=rs.getString("address");
                 dadd.setText(add3);
                 
                  String add4=rs.getString("date");
                 ddate.setText(add4);
                 
                  String add5=rs.getString("m_purchase");
                 dmp.setText(add5);
                 
                  String add6=rs.getString("qty_unit");
                 dqty.setText(add6);
                 
                  String add7=rs.getString("rate");
                 drate.setText(add7);
                 
                  String add8=rs.getString("cost");
                 dcost.setText(add8);
                 
         
                 
                 
             }
            // top.show();
             //top.setVisible(true);
             
             
             
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_table_dataMouseClicked

    private void dconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dconActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dconActionPerformed

    private void dspKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dspKeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c)|| Character.isSpace(c)  || (c==KeyEvent.VK_BACKSPACE)||c==KeyEvent.VK_DELETE )){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "INVALID ENTRY");
        }
    }//GEN-LAST:event_dspKeyTyped

    private void dconKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dconKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACKSPACE)||c==KeyEvent.VK_DELETE )){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "INVALID ENTRY");
        }
    }//GEN-LAST:event_dconKeyTyped

    private void daddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_daddKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_daddKeyTyped

    private void drateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_drateKeyTyped
        
    }//GEN-LAST:event_drateKeyTyped

    private void dqtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dqtyKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_dqtyKeyTyped

    private void dcostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dcostKeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        if(!(Character.isDigit(c)|| (c==KeyEvent.VK_BACKSPACE)||c==KeyEvent.VK_DELETE )){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "INVALID ENTRY");
        }
    }//GEN-LAST:event_dcostKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         Dbconnect fb = new Dbconnect();
        fb.connect();
        Connection con = fb.con;
        
        try{
             Statement stmt;
            stmt= con.createStatement();
             
       
            
           /* String value1=dsp.getText();
            String value2=dcon.getText();
            String value3=dadd.getText();
            String value4=dmp.getText();
            String value5=dcost.getText();
            String value6=dqty.getText();
            String value7=drate.getText();
            */
            int row=table_data.getSelectedRow();
            
            String Table_click=(table_data.getModel().getValueAt(row,0).toString());
            int p=JOptionPane.showConfirmDialog(null,"Do You Really Want To Delete","DELETE",JOptionPane.YES_NO_OPTION);
            if(p==0){
            String sql=("DELETE FROM material where s_id="+Table_click);
            stmt.executeUpdate(sql);
            
            JOptionPane.showMessageDialog(null, "deleted");
            
           close();
           Table tb =new Table(uname,date);
           tb.setVisible(true);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e); 
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
        
    }
  
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dadd;
    private javax.swing.JTextField dcon;
    private javax.swing.JTextField dcost;
    private javax.swing.JTextField ddate;
    private javax.swing.JTextField dmp;
    private javax.swing.JTextField dqty;
    private javax.swing.JTextField drate;
    private javax.swing.JTextField dsp;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_data;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
